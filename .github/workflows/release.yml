name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    continue-on-error: true

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: arm64
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: |
          bun install

      # Linux ARM-specific setup
      - name: Setup Linux ARM build environment
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      # Build TypeScript and Vite for all platforms
      - name: Build TypeScript and Vite
        run: |
          bun run tsc
          bun run vite build

      # macOS build
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bun run electron-builder --mac --arm64 --publish never

      # Linux ARM build
      - name: Build Linux ARM
        if: matrix.os == 'ubuntu-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bun run electron-builder --linux --arm64 --publish never

      # Upload artifacts for release
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            release/**/*.dmg
            release/**/*.AppImage

  create-release:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: |
            {
              "categories": [
                {
                  "title": "## üöÄ Features",
                  "pattern": "^feat.*"
                },
                {
                  "title": "## üêõ Fixes",
                  "pattern": "^fix.*"
                },
                {
                  "title": "## üèóÔ∏è Changes",
                  "pattern": "^refactor.*"
                },
                {
                  "title": "## üì¶ Dependencies",
                  "pattern": "^deps.*"
                },
                {
                  "title": "## üí¨ Other",
                  "pattern": "^.*"
                }
              ],
              "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
              "commit_template": "- {{message}}",
              "empty_template": "- no changes",
              "trim_values": true
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.AppImage
          body: ${{steps.changelog.outputs.changelog}}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}